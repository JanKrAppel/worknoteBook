#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Created on Thu Aug 27 20:41:07 2015

@author: appel
"""

if __name__ == '__main__':
    from argparse import ArgumentParser
    from os.path import exists, expanduser
    from os import makedirs
    parser = ArgumentParser()
    parser.add_argument('command', help='Command to execute', choices=['server',
                                                                       'list',
                                                                       'download',
                                                                       'upload'])
    parser.add_argument('--index', '-i', type=int, default=1, help='Select the index')
    parser.add_argument('--workdir', '-w', type=str, default=None, help='Select the working directory')
    parser.add_argument('--overwrite', '-o', action='store_true', help='Select the working directory')
    args = parser.parse_args()
    
    if not exists(expanduser('~/.worknoteBook/storage')):
        makedirs(expanduser('~/.worknoteBook/storage'))
    if args.command == 'server':
        import cherrypy
        default_cfg = {'server': {'storagedir': '~/.worknoteBook/storage',
                                  'url': '0.0.0.0',
                                  'port': 8080}}
        from worknoteBookServer import worknoteBookServer
        from worknoteBookHelpers import Configuration
        server_cfg = Configuration(expanduser('~/.worknoteBook/server.cfg'), default_cfg)
        cherrypy.quickstart(worknoteBookServer(server_cfg))
    elif args.command == 'list':
        from worknoteBookClient import worknoteBookClient
        client = worknoteBookClient('localhost', 8080)
        client.list()
    elif args.command == 'download':
        from worknoteBookClient import worknoteBookClient
        client = worknoteBookClient('localhost', 8080)
        client.download(args.index, args.workdir)
    elif args.command == 'upload':
        from worknoteBookClient import worknoteBookClient
        client = worknoteBookClient('localhost', 8080)
        client.upload(args.workdir, args.overwrite)
